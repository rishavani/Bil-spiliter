import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    home: HomePage(),
  ));
}

class HomePage extends StatefulWidget {
  const HomePage({Key? key}) : super(key: key);

  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  int i = 0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("WELCOME"),
      ),
      body: Container(
        child: Column(
          children: <Widget>[
            Expanded(
              child: ListView.builder(
                shrinkWrap: true,
                itemCount: i,
                itemBuilder: (context, i){
                  return ListTile(
                    title: Text("Occasion $i"),
                    trailing: IconButton(
                      onPressed: (){

                      },
                      icon: Icon(Icons.remove_circle),
                    ),
                    onTap: (){
                      Navigator.push(
                          context,
                          MaterialPageRoute(builder: (context) => Occasion(i))
                      );
                    },
                  );
                },
              ),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: (){
          setState(() {
            i = i + 1;
          });
        },
        child: Icon(Icons.add),
      ),
    );
  }
}


class Occasion extends StatefulWidget {

  final int i;

  Occasion(this.i);

  @override
  _OccasionState createState() => _OccasionState();
}

class _OccasionState extends State<Occasion> {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'EVENTS',
      home: MultiForm(),
    );
  }
}

class Events{
  String name;
  String reason;

  Events({this.name = "B", this.reason = "A"});
}

typedef OnDelete();

class EventsDetail extends StatefulWidget {

  final Events events;
  final state = _EventsDetailState() ;
  final OnDelete onDelete;
  EventsDetail(this.events, this.onDelete);

  @override
  _EventsDetailState createState() => state;
}

class _EventsDetailState extends State<EventsDetail> {

  final form = GlobalKey<FormState>();

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: EdgeInsets.all(8),
      child: Card(
        child: Form(
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: <Widget>[
              AppBar(
                leading: Icon(
                  Icons.people,
                ),
                title: Text('EventsDetail Form'),
                actions: <Widget>[
                  IconButton(
                      onPressed: widget.onDelete,
                      icon: Icon(Icons.delete),
                  ),
                ],
              ),
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: TextFormField(
                  initialValue: widget.events.name,
                  onSaved: (val) => widget.events.name = val!,
                  decoration: InputDecoration(
                    labelText: 'name',
                    hintText: 'Enter name',
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: TextFormField(
                  initialValue: widget.events.reason,
                  onSaved: (val) => widget.events.reason = val!,
                  decoration: InputDecoration(
                    labelText: 'Reason',
                    hintText: 'Enter reason',
                  ),
                ),
              ),
            ],
          ),
        ),
      ),

    );
  }
}


class MultiForm extends StatefulWidget {

  @override
  _MultiFormState createState() => _MultiFormState();
}

class _MultiFormState extends State<MultiForm> {

  List<Events> events = [];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Events Detail'),
      ),
      body: events.length<=0 ? Center(
        child: Text('Add Events'),
      ): ListView.builder(
        itemCount: events.length,
        itemBuilder: (Context,index) => EventsDetail(
            OnDelete : () => onDelete(index),
            Events : events[index],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: onAddForm,
        child: Icon(
          Icons.add,
        ),
        backgroundColor: Colors.green,
      ),
    );
  }

  void onDelete(int index){
    setState(() {
      events.remove(index);
    });
  }

  void onAddForm(){
    setState(() {
      events.add(Events());
    });
  }
}